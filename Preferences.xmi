
#import "Preferences.h"
#import "iPhonePrivate.h"

#define kPreferencesFileName [NSString stringWithFormat:@"/var/mobile/Library/Preferences/%@.plist", kPreferencesBundleIdentifier]
static NSDictionary *preferences = nil;
static NSMutableSet *applyActions = nil;

static void PreferencesApply() {
    NSLog(@"applying preferences: %@", applyActions);

    for (PreferencesApplyAction action in applyActions) {
        action();
    }
}

void PreferencesApplyActionRegister(PreferencesApplyAction block) {
    [applyActions addObject:[block copy]];
    NSLog(@"apply actions: %@", applyActions);
}

static void PreferencesLoad() {
    [preferences release];
    preferences = [[NSDictionary dictionaryWithContentsOfFile:kPreferencesFileName] retain];
}

id PreferencesGet(NSString *key, id defaultValue) {
    id value = [preferences objectForKey:key];
    if (value == nil) value = defaultValue;
    return value;
}

void PreferencesSet(NSString *key, id value) {
    NSMutableDictionary *mutablePreferences = [preferences mutableCopy];
    [mutablePreferences setObject:value forKey:key];
    [mutablePreferences writeToFile:kPreferencesFileName atomically:NO];
    [mutablePreferences release];

    PreferencesLoad();
    PreferencesApply();
}

static void PreferencesChangedCallback(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo) {
    NSLog(@"preferences changed callback: %@", name);
    PreferencesLoad();
    NSLog(@"preferences changed! %@", applyActions);
    PreferencesApply();
}

%ctor {
    applyActions = [[NSMutableSet alloc] init];
    NSLog(@"apply actions: %@", applyActions);

    PreferencesLoad();

    CFNotificationCenterAddObserver(CFNotificationCenterGetDarwinNotifyCenter(), NULL, PreferencesChangedCallback, (CFStringRef) [NSString stringWithFormat:@"%@.preferences-changed", kPreferencesBundleIdentifier], NULL, CFNotificationSuspensionBehaviorCoalesce);
}


