
#import "Preferences.h"
#import "iPhonePrivate.h"
#import "SwipeDetectorWindow.h"

#define kPreferencesFileName [NSString stringWithFormat:@"/var/mobile/Library/Preferences/%@.plist", kPreferencesBundleIdentifier]
static NSDictionary *preferences = nil;

static void PreferencesApply() {
    [[objc_getClass("SBUIController") sharedInstance] updateSwipeDetectorWindows];
}

static void PreferencesLoad() {
    [preferences release];
    preferences = [[NSDictionary dictionaryWithContentsOfFile:kPreferencesFileName] retain];
}

id PreferencesGet(NSString *key, id defaultValue) {
    id value = [preferences objectForKey:key];
    if (value == nil) value = defaultValue;
    return value;
}

void PreferencesSet(NSString *key, id value) {
    NSMutableDictionary *mutablePreferences = [preferences mutableCopy];
    [mutablePreferences setObject:value forKey:key];
    [mutablePreferences writeToFile:kPreferencesFileName atomically:NO];
    [mutablePreferences release];

    PreferencesLoad();
    PreferencesApply();
}

static void PreferencesChangedCallback(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo) {
    PreferencesLoad();
    PreferencesApply();
}

%ctor {
    PreferencesLoad();

    CFNotificationCenterAddObserver(CFNotificationCenterGetDarwinNotifyCenter(), NULL, PreferencesChangedCallback, (CFStringRef) [NSString stringWithFormat:@"%@.preferences-changed", kPreferencesBundleIdentifier], NULL, CFNotificationSuspensionBehaviorCoalesce);
}


/*
typedef enum {
    kSBOffscreenEdgeLeft = 1,
    kSBOffscreenEdgeRight = 4,
    kSBOffscreenEdgeTop = 2,
    kSBOffscreenEdgeBottom = 8
} SBOffscreenEdge;

static BOOL began = NO;

@interface SBGestureRecognizer : NSObject
@property (nonatomic, copy) void (^handler)(id gestureRecognizer);
@property (nonatomic, copy) BOOL (^canBeginCondition)();
@property (nonatomic, assign) int types;
@property (nonatomic, assign) int minTouches;
@end

@interface SBFluidSwipeGestureRecognizer : SBGestureRecognizer
- (CGPoint)centroidPoint;
@end

@interface SBPanGestureRecognizer : SBFluidSwipeGestureRecognizer
@end

@interface SBOffscreenSwipeGestureRecognizer : SBPanGestureRecognizer
@property (nonatomic, assign) BOOL sendsTouchesCancelledToApplication;
@property (nonatomic, assign) BOOL allowableDistanceFromEdgeCenter;
@end

%hook SBUIController

- (void)finishLaunching {
    SBOffscreenSwipeGestureRecognizer *gu = [[objc_getClass("SBOffscreenSwipeGestureRecognizer") alloc] initForOffscreenEdge:kSBOffscreenEdgeTop];
    //[gu setTypes:8];
    [gu setMinTouches:1];

    void (^handler)(id) = ^void (SBFluidSwipeGestureRecognizer *gesture) {
    };

    [gu setCanBeginCondition:^BOOL () {
        NSLog(@"can begin?");
        return YES;
    }];
    [gu setSendsTouchesCancelledToApplication:YES];
    [gu setAllowableDistanceFromEdgeCenter:0.5f];

    %orig;
}

%end

*/

