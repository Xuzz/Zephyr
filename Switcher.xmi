
#import "Switcher.h"
#import "Preferences.h"

static void ActivateSwitcherFromToDuration(CGFloat from, CGFloat to, CGFloat duration) {
    id uic = [objc_getClass("SBUIController") sharedInstance];

    id zeroContext = [uic _showcaseContextForOffset:from];
    id barContext = [uic _showcaseContextForOffset:to];

    [zeroContext setShowcaseOrientation:UIInterfaceOrientationPortrait];
    [barContext setShowcaseOrientation:UIInterfaceOrientationPortrait];

    [uic _activateSwitcherFrom:zeroContext to:barContext duration:duration];
}

static CGFloat HeightFromScreenPercentage(CGFloat percentage) {
    return [[UIScreen mainScreen] bounds].size.height * percentage;
}

@implementation SwitcherGesture

- (BOOL)shouldActivate {
    return ![[objc_getClass("SBAwayController") sharedAwayController] isLocked]
        && ![[objc_getClass("SBUIController") sharedInstance] isSwitcherShowing]
        && ![[objc_getClass("SBBulletinListController") sharedInstanceIfExists] listViewIsActive]
        && [(NSNumber *) PreferencesGet(@"SwipeUpAction", [NSNumber numberWithInt:kSwipeUpActionSwitcher]) intValue] == kSwipeUpActionSwitcher;
}

- (void)handleGestureCanceled {
    // XXX: implement this correctly
}

- (void)handleGestureBeganWithLocation:(CGFloat)location {
    location = HeightFromScreenPercentage(location);

    SBApplication *app = [SBApp _accessibilityFrontMostApplication];

    if (app != nil) {
        [[[objc_getClass("SBUIController") sharedInstance] rootView] setAlpha:1.0f];
        appView = [[objc_getClass("SBGestureViewVendor") sharedInstance] viewForApp:app gestureType:kSBGestureTypeSwitchApp includeStatusBar:YES];
    } else {
        appView = [[objc_getClass("SBUIController") sharedInstance] contentView];
    }

    shadowView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"SwitcherShadowTop.png"]];
    CGRect shadowFrame = [shadowView frame];
    shadowFrame.size = [[shadowView image] size];
    shadowFrame.size.width = [appView bounds].size.width;
    shadowFrame.origin.y = [appView bounds].size.height;
    [shadowView setFrame:shadowFrame];

    wrapperView = [[UIView alloc] initWithFrame:[appView bounds]];
    [wrapperView setClipsToBounds:NO];
    [wrapperView addSubview:appView];
    [wrapperView addSubview:shadowView];

    switcherView = [[objc_getClass("SBAppSwitcherController") sharedInstance] view];
    [[objc_getClass("SBAppSwitcherController") sharedInstance] setupForApp:app orientation:UIInterfaceOrientationPortrait];
    CGRect switcherFrame = [switcherView frame];
    CGFloat bottomBarHeight = [[objc_getClass("SBAppSwitcherController") sharedInstance] bottomBarHeight];
    switcherFrame.origin.y = [appView bounds].size.height - bottomBarHeight;
    [switcherView setFrame:switcherFrame];

    UIView *rootView = [[objc_getClass("SBUIController") sharedInstance] rootView];
    [rootView addSubview:switcherView];
    [rootView addSubview:wrapperView];
    [rootView addSubview:shadowView];
}

- (void)handleGestureChangedWithLocation:(CGFloat)location velocity:(CGPoint)velocity {
    location = HeightFromScreenPercentage(location);

    CGFloat bottomBarHeight = [[objc_getClass("SBAppSwitcherController") sharedInstance] bottomBarHeight];
    if (-location > bottomBarHeight) location = -bottomBarHeight;

    CGRect wrapperFrame = [wrapperView frame];
    wrapperFrame.origin.y = location;
    [wrapperView setFrame:wrapperFrame];

    CGRect shadowFrame = [shadowView frame];
    shadowFrame.origin.y = wrapperFrame.size.height + location;
    [shadowView setFrame:shadowFrame];
}

- (void)handleGestureEndedWithLocation:(CGFloat)location velocity:(CGPoint)velocity completionType:(int)type {
    location = HeightFromScreenPercentage(location);

    void (^cleanupViews)() = nil;
    SBApplication *app = [SBApp _accessibilityFrontMostApplication];

    if (app != nil) {
        cleanupViews = ^{
            [wrapperView release];
            [wrapperView removeFromSuperview];
            wrapperView = nil;

            [app disableContextHostingForRequester:(CFStringRef) @"SwitchApp"];

            [switcherView removeFromSuperview];
            switcherView = nil;

            [shadowView removeFromSuperview];
            [shadowView release];
            shadowView = nil;
        };
    } else {
        cleanupViews = ^{
            CGRect wrapperFrame = [wrapperView frame];
            wrapperFrame.origin = CGPointZero;
            [wrapperView setFrame:wrapperFrame];
            wrapperView = nil;

            appView = nil;

            [switcherView removeFromSuperview];
            switcherView = nil;

            [shadowView removeFromSuperview];
            [shadowView release];
            shadowView = nil;
        };
    }

    // XXX: maybe use the completionType here
    CGFloat bottomBarHeight = [[objc_getClass("SBAppSwitcherController") sharedInstance] bottomBarHeight];
    if (-location >= bottomBarHeight * (2.0f / 3.0f)) {
        cleanupViews();

        CGFloat from, to, duration;
        if (-location >= bottomBarHeight) {
            from = bottomBarHeight;
            to = bottomBarHeight;
            duration = app == nil ? 0.3 : 0;
        } else {
            from = -location;
            to = bottomBarHeight;
            duration = 0.3f;
        }
        ActivateSwitcherFromToDuration(from, to, duration);
    } else {
        [UIView animateWithDuration:0.3f animations:^{
            CGRect wrapperFrame = [wrapperView frame];
            wrapperFrame.origin = CGPointZero;
            [wrapperView setFrame:wrapperFrame];
            
            CGRect shadowFrame = [shadowView frame];
            shadowFrame.origin.y = wrapperFrame.size.height;
            [shadowView setFrame:shadowFrame];
        } completion:^(BOOL completed) {
            cleanupViews();
        }];
    }
}

@end

%group Switcher

%hook SBUIController

- (void)finishLaunching {
    %orig;

    SwitcherGesture *gesture = [[SwitcherGesture alloc] init];
    gesture = nil;
    //[gesture addOffscreenEdge:kSBOffscreenEdgeBottom];
}

%end

%end

%ctor {
    %init(Switcher);
}

