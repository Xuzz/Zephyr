/*
 * Copyright (c) 2011-2013, Xuzz Productions, LLC
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#import "Common.h"
#import "BaseGesture.h"

// When we pretend to be an iPad in GestureEnabler.xmi, we break the Lock Screen camera
// close gesture, since it things we are on an iPad and doesn't set one up. Rather than
// trying to add more hacks into that to get the built in gesture, we can make our own.
@interface ZephyrCameraCloseGesture : ZephyrBaseGesture
@end

@implementation ZephyrCameraCloseGesture : ZephyrBaseGesture

- (BOOL)shouldActivateAtEdge:(SBOffscreenEdge)edge {
    return [[objc_getClass("SBAwayController") sharedAwayControllerIfExists] allowDismissCameraSystemGesture];
}

- (void)handleGestureBegan:(SBGestureRecognizer *)recognizer withLocation:(CGFloat)location {
    [[objc_getClass("SBAwayController") sharedAwayControllerIfExists] handleDismissCameraSystemGesture:recognizer];
}

- (void)handleGestureChanged:(SBGestureRecognizer *)recognizer withLocation:(CGFloat)location velocity:(CGPoint)velocity {
    [[objc_getClass("SBAwayController") sharedAwayControllerIfExists] handleDismissCameraSystemGesture:recognizer];
}

- (void)handleGestureEnded:(SBGestureRecognizer *)recognizer withLocation:(CGFloat)location velocity:(CGPoint)velocity completionType:(int)type {
    [[objc_getClass("SBAwayController") sharedAwayControllerIfExists] handleDismissCameraSystemGesture:recognizer];
}

- (void)handleGestureCanceled:(SBGestureRecognizer *)recognizer {
    [[objc_getClass("SBAwayController") sharedAwayControllerIfExists] handleDismissCameraSystemGesture:recognizer];
}

@end

static ZephyrCameraCloseGesture *gesture = nil;

%group Camera

%hook SBUIController

- (void)finishLaunching {
    %orig;

    // This was added in iOS 5.1.
    if ([objc_getClass("SBAwayController") instancesRespondToSelector:@selector(allowDismissCameraSystemGesture)]) {
        gesture = [[ZephyrCameraCloseGesture alloc] init];
        [gesture addOffscreenEdge:kSBOffscreenEdgeTop minimumTouchCount:1 edgeMargin:30.0f];
    }
}

%end

%end

%ctor {
    %init(Camera);
}

